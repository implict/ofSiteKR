<%inherit file="base.mako" />
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    ${self.head()}
    <meta http-equiv="X-UA-Compatible" content="IE=9"/>
    <meta name="generator" content="Doxygen 1.8.3.1"/>
    <title>openFrameworks: Class Index</title>
    <link href="tabs.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="dynsections.js"></script>
    <link href="search/search.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="search/search.js"></script>
    <script type="text/javascript">
      $(document).ready(function() { searchBox.OnSelectItem(0); });
    </script>
    <link href="doxygen.css" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <div id="content">
      ${self.header()}
      <div id="body-wrap">
      		<div class="page-wide">
	            <div class="page-left-split">
           		    <h1 class="documentation">reference</h1> <ul class="docsadvanced"><li><a href="/documentation">basic</a></li> <li><a  class="active" href="/doxygen/annotated.html">advanced</a></li> </ul>
           		</div>
		        <div class="page-right-narrow">
			        <p>This documentation is automatically generated from the openFrameworks source code using doxygen and refers to the most recent release, version <strong>${bf.config.currentVersion}</strong>.</p>
		        </div>
       		</div>
      		<div class="page-wide">
      		    <div class="doxy-mainmenu">
<!-- Generated by Doxygen 1.8.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classof_true_type_font-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ofTrueTypeFont Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="of_true_type_font_8h_source.html">ofTrueTypeFont.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5af9f717ceaa6f53e7b8c100b40ef923"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a5af9f717ceaa6f53e7b8c100b40ef923">ofTrueTypeFont</a> ()</td></tr>
<tr class="separator:a5af9f717ceaa6f53e7b8c100b40ef923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea0b8daaaaf2299caf6c9a57f57321ac"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#aea0b8daaaaf2299caf6c9a57f57321ac">~ofTrueTypeFont</a> ()</td></tr>
<tr class="separator:aea0b8daaaaf2299caf6c9a57f57321ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55cc803d12857a970408f2e14b6b568c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a55cc803d12857a970408f2e14b6b568c">loadFont</a> (string <a class="el" href="classof_true_type_font.html#a45ccd39c69fc58ad564474c995cce89a">filename</a>, int fontsize, bool _bAntiAliased=true, bool _bFullCharacterSet=false, bool makeContours=false, float <a class="el" href="classof_true_type_font.html#a8f97cd252e22e135aea3f87b0b18d5c8">simplifyAmt</a>=0.3, int <a class="el" href="classof_true_type_font.html#a090438504cff905e746f58c087d06944">dpi</a>=0)</td></tr>
<tr class="memdesc:a55cc803d12857a970408f2e14b6b568c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads the font specified by filename, allows you to control size, aliasing, and other parameters.  <a href="#a55cc803d12857a970408f2e14b6b568c">More...</a><br/></td></tr>
<tr class="separator:a55cc803d12857a970408f2e14b6b568c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5694c01739ede1bb0a136153b848ebc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#aa5694c01739ede1bb0a136153b848ebc">isLoaded</a> ()</td></tr>
<tr class="memdesc:aa5694c01739ede1bb0a136153b848ebc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has the font been loaded successfully?  <a href="#aa5694c01739ede1bb0a136153b848ebc">More...</a><br/></td></tr>
<tr class="separator:aa5694c01739ede1bb0a136153b848ebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab565e2941f3d53d97f2292d07bf87b61"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ab565e2941f3d53d97f2292d07bf87b61">isAntiAliased</a> ()</td></tr>
<tr class="memdesc:ab565e2941f3d53d97f2292d07bf87b61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the font anit-aliased?  <a href="#ab565e2941f3d53d97f2292d07bf87b61">More...</a><br/></td></tr>
<tr class="separator:ab565e2941f3d53d97f2292d07bf87b61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30ad1c1bd00c8708324463f5d46e466a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a30ad1c1bd00c8708324463f5d46e466a">hasFullCharacterSet</a> ()</td></tr>
<tr class="memdesc:a30ad1c1bd00c8708324463f5d46e466a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Does the font have a full character set?  <a href="#a30ad1c1bd00c8708324463f5d46e466a">More...</a><br/></td></tr>
<tr class="separator:a30ad1c1bd00c8708324463f5d46e466a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbb80647aa21a907250af47d5a3fcc6f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#adbb80647aa21a907250af47d5a3fcc6f">getSize</a> ()</td></tr>
<tr class="memdesc:adbb80647aa21a907250af47d5a3fcc6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size of the font.  <a href="#adbb80647aa21a907250af47d5a3fcc6f">More...</a><br/></td></tr>
<tr class="separator:adbb80647aa21a907250af47d5a3fcc6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3bc6e1c7a358236094471e85556fa70"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ab3bc6e1c7a358236094471e85556fa70">getLineHeight</a> ()</td></tr>
<tr class="memdesc:ab3bc6e1c7a358236094471e85556fa70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes line height based on font size.  <a href="#ab3bc6e1c7a358236094471e85556fa70">More...</a><br/></td></tr>
<tr class="separator:ab3bc6e1c7a358236094471e85556fa70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c7fa9a7f2e681af2ceb6bb2f5b24788"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a4c7fa9a7f2e681af2ceb6bb2f5b24788">setLineHeight</a> (float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="memdesc:a4c7fa9a7f2e681af2ceb6bb2f5b24788"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets line height for text drawn on screen.  <a href="#a4c7fa9a7f2e681af2ceb6bb2f5b24788">More...</a><br/></td></tr>
<tr class="separator:a4c7fa9a7f2e681af2ceb6bb2f5b24788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a634099486e62ef1b02f74efc57f2d9ae"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a634099486e62ef1b02f74efc57f2d9ae">getLetterSpacing</a> ()</td></tr>
<tr class="memdesc:a634099486e62ef1b02f74efc57f2d9ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns letter spacing of font object.  <a href="#a634099486e62ef1b02f74efc57f2d9ae">More...</a><br/></td></tr>
<tr class="separator:a634099486e62ef1b02f74efc57f2d9ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cd0651d15f07ae1b350bf398871be62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a5cd0651d15f07ae1b350bf398871be62">setLetterSpacing</a> (float spacing)</td></tr>
<tr class="memdesc:a5cd0651d15f07ae1b350bf398871be62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the letter spacing of the font object.  <a href="#a5cd0651d15f07ae1b350bf398871be62">More...</a><br/></td></tr>
<tr class="separator:a5cd0651d15f07ae1b350bf398871be62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1aa32271150b500832930386c6f3d698"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a1aa32271150b500832930386c6f3d698">getSpaceSize</a> ()</td></tr>
<tr class="memdesc:a1aa32271150b500832930386c6f3d698"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a variable that represents how wide spaces are.  <a href="#a1aa32271150b500832930386c6f3d698">More...</a><br/></td></tr>
<tr class="separator:a1aa32271150b500832930386c6f3d698"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff2f15127afb428d59a12b583fbea178"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#aff2f15127afb428d59a12b583fbea178">setSpaceSize</a> (float size)</td></tr>
<tr class="memdesc:aff2f15127afb428d59a12b583fbea178"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the size of the space ' ' character.  <a href="#aff2f15127afb428d59a12b583fbea178">More...</a><br/></td></tr>
<tr class="separator:aff2f15127afb428d59a12b583fbea178"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecb42f8691b704a8fc3394353c9cefd8"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#aecb42f8691b704a8fc3394353c9cefd8">stringWidth</a> (string s)</td></tr>
<tr class="memdesc:aecb42f8691b704a8fc3394353c9cefd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the string width.  <a href="#aecb42f8691b704a8fc3394353c9cefd8">More...</a><br/></td></tr>
<tr class="separator:aecb42f8691b704a8fc3394353c9cefd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5de7ff4031df5404d2a6be33ca8b62ea"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a5de7ff4031df5404d2a6be33ca8b62ea">stringHeight</a> (string s)</td></tr>
<tr class="memdesc:a5de7ff4031df5404d2a6be33ca8b62ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the string height.  <a href="#a5de7ff4031df5404d2a6be33ca8b62ea">More...</a><br/></td></tr>
<tr class="separator:a5de7ff4031df5404d2a6be33ca8b62ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdd3e920bdd44cef5e7aa05db0907cc4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_rectangle.html">ofRectangle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#abdd3e920bdd44cef5e7aa05db0907cc4">getStringBoundingBox</a> (string s, float x, float y)</td></tr>
<tr class="memdesc:abdd3e920bdd44cef5e7aa05db0907cc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the bounding box of a string as a rectangle.  <a href="#abdd3e920bdd44cef5e7aa05db0907cc4">More...</a><br/></td></tr>
<tr class="separator:abdd3e920bdd44cef5e7aa05db0907cc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad775d8f4f08a21356fb4323238430607"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ad775d8f4f08a21356fb4323238430607">drawString</a> (string s, float x, float y)</td></tr>
<tr class="memdesc:ad775d8f4f08a21356fb4323238430607"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a string s at position x,y.  <a href="#ad775d8f4f08a21356fb4323238430607">More...</a><br/></td></tr>
<tr class="separator:ad775d8f4f08a21356fb4323238430607"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2351167f6a15eea29e8fea7ae8ed632"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ab2351167f6a15eea29e8fea7ae8ed632">drawStringAsShapes</a> (string s, float x, float y)</td></tr>
<tr class="memdesc:ab2351167f6a15eea29e8fea7ae8ed632"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws the string as if it was geometrical shapes.  <a href="#ab2351167f6a15eea29e8fea7ae8ed632">More...</a><br/></td></tr>
<tr class="separator:ab2351167f6a15eea29e8fea7ae8ed632"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37523f38c5be929f82d87bac15308f03"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a37523f38c5be929f82d87bac15308f03">getNumCharacters</a> ()</td></tr>
<tr class="memdesc:a37523f38c5be929f82d87bac15308f03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the num chars in the loaded character set.  <a href="#a37523f38c5be929f82d87bac15308f03">More...</a><br/></td></tr>
<tr class="separator:a37523f38c5be929f82d87bac15308f03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01515b9294356ddba2eae222c214fb95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="of_true_type_font_8h.html#a82ccc235db2f74dfdc922b67748791cf">ofTTFCharacter</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a01515b9294356ddba2eae222c214fb95">getCharacterAsPoints</a> (int character, bool vflip=<a class="el" href="of_base_types_8h.html#a112ebf9b37b365ab634260fa7413d92e">ofIsVFlipped</a>())</td></tr>
<tr class="separator:a01515b9294356ddba2eae222c214fb95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d020d826d0427240dcaf029d83dfd50"><td class="memItemLeft" align="right" valign="top">vector&lt; <a class="el" href="of_true_type_font_8h.html#a82ccc235db2f74dfdc922b67748791cf">ofTTFCharacter</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a6d020d826d0427240dcaf029d83dfd50">getStringAsPoints</a> (string str, bool vflip=<a class="el" href="of_base_types_8h.html#a112ebf9b37b365ab634260fa7413d92e">ofIsVFlipped</a>())</td></tr>
<tr class="separator:a6d020d826d0427240dcaf029d83dfd50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54032e60371b4a8b854b9a91c3e46cd7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_mesh.html">ofMesh</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a54032e60371b4a8b854b9a91c3e46cd7">getStringMesh</a> (string s, float x, float y)</td></tr>
<tr class="separator:a54032e60371b4a8b854b9a91c3e46cd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a043c3e871e6d8c1b32e7697ac4411eb0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_texture.html">ofTexture</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a043c3e871e6d8c1b32e7697ac4411eb0">getFontTexture</a> ()</td></tr>
<tr class="separator:a043c3e871e6d8c1b32e7697ac4411eb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8101f091667f0033e5e03ade307f48d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a8101f091667f0033e5e03ade307f48d7">bind</a> ()</td></tr>
<tr class="separator:a8101f091667f0033e5e03ade307f48d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1270a90ae2a39acd665f9187f5dbf6c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a1270a90ae2a39acd665f9187f5dbf6c3">unbind</a> ()</td></tr>
<tr class="separator:a1270a90ae2a39acd665f9187f5dbf6c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ae68744a50f815cf68cc3836dfba94d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="of_constants_8h.html#ad4e6cefebff2917f91e999904fa9b17f">ofTextEncoding</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a8ae68744a50f815cf68cc3836dfba94d">getEncoding</a> () const </td></tr>
<tr class="memdesc:a8ae68744a50f815cf68cc3836dfba94d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current font endcoding.  <a href="#a8ae68744a50f815cf68cc3836dfba94d">More...</a><br/></td></tr>
<tr class="separator:a8ae68744a50f815cf68cc3836dfba94d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcb3ec25a1d51bb2f6945742b71dda23"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#abcb3ec25a1d51bb2f6945742b71dda23">setEncoding</a> (<a class="el" href="of_constants_8h.html#ad4e6cefebff2917f91e999904fa9b17f">ofTextEncoding</a> encoding)</td></tr>
<tr class="memdesc:abcb3ec25a1d51bb2f6945742b71dda23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current font encoding.  <a href="#abcb3ec25a1d51bb2f6945742b71dda23">More...</a><br/></td></tr>
<tr class="separator:abcb3ec25a1d51bb2f6945742b71dda23"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a3fc29ab51f9fc87b321f9c70c2168aa5"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a3fc29ab51f9fc87b321f9c70c2168aa5">setGlobalDpi</a> (int newDpi)</td></tr>
<tr class="separator:a3fc29ab51f9fc87b321f9c70c2168aa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ad36450962da531f43d40bf3eea34619e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ad36450962da531f43d40bf3eea34619e">drawChar</a> (int <a class="el" href="of_matrix4x4_8cpp.html#aafc737ea9ef91f59cf9acd287fb8d085">c</a>, float x, float y)</td></tr>
<tr class="separator:ad36450962da531f43d40bf3eea34619e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e6acb96718ed85be4a345c05203c3f3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a2e6acb96718ed85be4a345c05203c3f3">drawCharAsShape</a> (int <a class="el" href="of_matrix4x4_8cpp.html#aafc737ea9ef91f59cf9acd287fb8d085">c</a>, float x, float y)</td></tr>
<tr class="separator:a2e6acb96718ed85be4a345c05203c3f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafa7bfe43f45c70e843eda0c5c321c63"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#aafa7bfe43f45c70e843eda0c5c321c63">createStringMesh</a> (string s, float x, float y)</td></tr>
<tr class="separator:aafa7bfe43f45c70e843eda0c5c321c63"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ae1b94826e0a87e7a9057b2285d1d8f4d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ae1b94826e0a87e7a9057b2285d1d8f4d">bLoadedOk</a></td></tr>
<tr class="separator:ae1b94826e0a87e7a9057b2285d1d8f4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0529672211eb65fb3d52d0c3555e764"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ae0529672211eb65fb3d52d0c3555e764">bAntiAliased</a></td></tr>
<tr class="separator:ae0529672211eb65fb3d52d0c3555e764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab174a525150961a41183ef4c0603806b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ab174a525150961a41183ef4c0603806b">bFullCharacterSet</a></td></tr>
<tr class="separator:ab174a525150961a41183ef4c0603806b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac4b8c9259c44c1f8cb8f38c884a94c1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#aac4b8c9259c44c1f8cb8f38c884a94c1">nCharacters</a></td></tr>
<tr class="separator:aac4b8c9259c44c1f8cb8f38c884a94c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d2c3da16937f1b2be80a02c055f12b4"><td class="memItemLeft" align="right" valign="top">vector&lt; <a class="el" href="of_true_type_font_8h.html#a82ccc235db2f74dfdc922b67748791cf">ofTTFCharacter</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a0d2c3da16937f1b2be80a02c055f12b4">charOutlines</a></td></tr>
<tr class="separator:a0d2c3da16937f1b2be80a02c055f12b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa988e4d74fd73397e17ce6ad23b4a924"><td class="memItemLeft" align="right" valign="top">vector&lt; <a class="el" href="of_true_type_font_8h.html#a82ccc235db2f74dfdc922b67748791cf">ofTTFCharacter</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#aa988e4d74fd73397e17ce6ad23b4a924">charOutlinesNonVFlipped</a></td></tr>
<tr class="separator:aa988e4d74fd73397e17ce6ad23b4a924"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a013460cfe40116939f07374222cd3c17"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a013460cfe40116939f07374222cd3c17">lineHeight</a></td></tr>
<tr class="separator:a013460cfe40116939f07374222cd3c17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cf821087583ddaba20d4318ff1374c3"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a8cf821087583ddaba20d4318ff1374c3">letterSpacing</a></td></tr>
<tr class="separator:a8cf821087583ddaba20d4318ff1374c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54a51a4379f956872cf136cc8c59dd17"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a54a51a4379f956872cf136cc8c59dd17">spaceSize</a></td></tr>
<tr class="separator:a54a51a4379f956872cf136cc8c59dd17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d1b89d3dc046e97f4ee716b0e65cbf6"><td class="memItemLeft" align="right" valign="top">vector&lt; <a class="el" href="structchar_props.html">charProps</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a2d1b89d3dc046e97f4ee716b0e65cbf6">cps</a></td></tr>
<tr class="separator:a2d1b89d3dc046e97f4ee716b0e65cbf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a6f8535815231d1f250c481ac5dfe6f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a5a6f8535815231d1f250c481ac5dfe6f">fontSize</a></td></tr>
<tr class="separator:a5a6f8535815231d1f250c481ac5dfe6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca35042934d2b5f3cfb92b1a57591e87"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#aca35042934d2b5f3cfb92b1a57591e87">bMakeContours</a></td></tr>
<tr class="separator:aca35042934d2b5f3cfb92b1a57591e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f97cd252e22e135aea3f87b0b18d5c8"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a8f97cd252e22e135aea3f87b0b18d5c8">simplifyAmt</a></td></tr>
<tr class="separator:a8f97cd252e22e135aea3f87b0b18d5c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a090438504cff905e746f58c087d06944"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a090438504cff905e746f58c087d06944">dpi</a></td></tr>
<tr class="separator:a090438504cff905e746f58c087d06944"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae09bc97209804f330e79a68512e39520"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#ae09bc97209804f330e79a68512e39520">border</a></td></tr>
<tr class="separator:ae09bc97209804f330e79a68512e39520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45ccd39c69fc58ad564474c995cce89a"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a45ccd39c69fc58ad564474c995cce89a">filename</a></td></tr>
<tr class="separator:a45ccd39c69fc58ad564474c995cce89a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a456c0fc05723e715ccecd528c2bf9551"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_texture.html">ofTexture</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a456c0fc05723e715ccecd528c2bf9551">texAtlas</a></td></tr>
<tr class="separator:a456c0fc05723e715ccecd528c2bf9551"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31d43872f74737dff07d7a7af8da0b37"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a31d43872f74737dff07d7a7af8da0b37">binded</a></td></tr>
<tr class="separator:a31d43872f74737dff07d7a7af8da0b37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aa0ef4fbbac6fca3cdeb5a6345cfc37"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_mesh.html">ofMesh</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a3aa0ef4fbbac6fca3cdeb5a6345cfc37">stringQuads</a></td></tr>
<tr class="separator:a3aa0ef4fbbac6fca3cdeb5a6345cfc37"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a82de6327bc237de1f9520cf07bec83f3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_true_type_font.html#a82de6327bc237de1f9520cf07bec83f3">ofExitCallback</a> ()</td></tr>
<tr class="separator:a82de6327bc237de1f9520cf07bec83f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl class="todo"><dt><b><a class="el" href="todo.html#_todo000032">Todo:</a></b></dt><dd></dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5af9f717ceaa6f53e7b8c100b40ef923"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ofTrueTypeFont::ofTrueTypeFont </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.html#_todo000033">Todo:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="aea0b8daaaaf2299caf6c9a57f57321ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ofTrueTypeFont::~ofTrueTypeFont </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.html#_todo000034">Todo:</a></b></dt><dd></dd></dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a8101f091667f0033e5e03ade307f48d7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::bind </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.html#_todo000037">Todo:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="aafa7bfe43f45c70e843eda0c5c321c63"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::createStringMesh </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad36450962da531f43d40bf3eea34619e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::drawChar </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2e6acb96718ed85be4a345c05203c3f3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::drawCharAsShape </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad775d8f4f08a21356fb4323238430607"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::drawString </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a string s at position x,y. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>String to draw </td></tr>
    <tr><td class="paramname">x</td><td>X position of string </td></tr>
    <tr><td class="paramname">y</td><td>Y position of string </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab2351167f6a15eea29e8fea7ae8ed632"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::drawStringAsShapes </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws the string as if it was geometrical shapes. </p>
<p>Uses the information contained in ofTTFContour and ofTTFCharacter.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X position of shapes </td></tr>
    <tr><td class="paramname">y</td><td>Y position of shapes </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a01515b9294356ddba2eae222c214fb95"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="of_true_type_font_8h.html#a82ccc235db2f74dfdc922b67748791cf">ofTTFCharacter</a> ofTrueTypeFont::getCharacterAsPoints </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>character</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>vflip</em> = <code><a class="el" href="of_base_types_8h.html#a112ebf9b37b365ab634260fa7413d92e">ofIsVFlipped</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.html#_todo000036">Todo:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a8ae68744a50f815cf68cc3836dfba94d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="of_constants_8h.html#ad4e6cefebff2917f91e999904fa9b17f">ofTextEncoding</a> ofTrueTypeFont::getEncoding </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current font endcoding. </p>
<p>This is set by <a class="el" href="classof_true_type_font.html#abcb3ec25a1d51bb2f6945742b71dda23" title="Sets the current font encoding. ">ofTrueTypeFont::setEncoding()</a> to either OF_ENCODING_UTF8 or OF_ENCODING_ISO_8859_15. OF_ENCODING_ISO_8859_15 is for an 8-bit single-byte coded graphic character sets, like ASCII while OF_ENCODING_UTF8 is a variable-width encoding that can represent every character in the Unicode character set.</p>
<dl class="section return"><dt>Returns</dt><dd>encoding used by the font object. </dd></dl>

</div>
</div>
<a class="anchor" id="a043c3e871e6d8c1b32e7697ac4411eb0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_texture.html">ofTexture</a> &amp; ofTrueTypeFont::getFontTexture </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a634099486e62ef1b02f74efc57f2d9ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::getLetterSpacing </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns letter spacing of font object. </p>
<p>You can control this by the <a class="el" href="classof_true_type_font.html#a5cd0651d15f07ae1b350bf398871be62" title="Sets the letter spacing of the font object. ">ofTrueTypeFont::setLetterSpacing()</a> function. 1.0 = default spacing, less then 1.0 would be tighter spacing, greater then 1.0 would be wider spacing.</p>
<dl class="section return"><dt>Returns</dt><dd>Returns letter spacing of font object. </dd></dl>

</div>
</div>
<a class="anchor" id="ab3bc6e1c7a358236094471e85556fa70"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::getLineHeight </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes line height based on font size. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns current line height. </dd></dl>

</div>
</div>
<a class="anchor" id="a37523f38c5be929f82d87bac15308f03"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ofTrueTypeFont::getNumCharacters </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the num chars in the loaded character set. </p>
<p>If you allocate the font using different paramters, you can load in partial and full character sets, this helps you know how many characters it can represent.</p>
<dl class="section return"><dt>Returns</dt><dd>Number of characters in loaded character set. </dd></dl>

</div>
</div>
<a class="anchor" id="adbb80647aa21a907250af47d5a3fcc6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ofTrueTypeFont::getSize </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the size of the font. </p>
<dl class="section return"><dt>Returns</dt><dd>Size of font, set when font was loaded. </dd></dl>

</div>
</div>
<a class="anchor" id="a1aa32271150b500832930386c6f3d698"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::getSpaceSize </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a variable that represents how wide spaces are. </p>
<p>It's a scalar for the width of the letter 'p', so 1.0 means that a space will be the size of the lower case 'p' of that font. 2.0 means that it's 2 times the size of the lower case 'p', etc.</p>
<dl class="section return"><dt>Returns</dt><dd>Returns a variable that represents how wide spaces are. </dd></dl>

</div>
</div>
<a class="anchor" id="a6d020d826d0427240dcaf029d83dfd50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="of_true_type_font_8h.html#a82ccc235db2f74dfdc922b67748791cf">ofTTFCharacter</a> &gt; ofTrueTypeFont::getStringAsPoints </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>vflip</em> = <code><a class="el" href="of_base_types_8h.html#a112ebf9b37b365ab634260fa7413d92e">ofIsVFlipped</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="abdd3e920bdd44cef5e7aa05db0907cc4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_rectangle.html">ofRectangle</a> ofTrueTypeFont::getStringBoundingBox </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the bounding box of a string as a rectangle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>The string to get bounding box of. </td></tr>
    <tr><td class="paramname">x</td><td>X position of returned rectangle. </td></tr>
    <tr><td class="paramname">y</td><td>Y position of returned rectangle. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the bounding box of a string as a rectangle. </dd></dl>

</div>
</div>
<a class="anchor" id="a54032e60371b4a8b854b9a91c3e46cd7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_mesh.html">ofMesh</a> &amp; ofTrueTypeFont::getStringMesh </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a30ad1c1bd00c8708324463f5d46e466a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::hasFullCharacterSet </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Does the font have a full character set? </p>
<dl class="section return"><dt>Returns</dt><dd>true if the font was allocated with a full character set. </dd></dl>

</div>
</div>
<a class="anchor" id="ab565e2941f3d53d97f2292d07bf87b61"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::isAntiAliased </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is the font anit-aliased? </p>
<dl class="section return"><dt>Returns</dt><dd>true if the font was set to be anti-aliased. </dd></dl>

</div>
</div>
<a class="anchor" id="aa5694c01739ede1bb0a136153b848ebc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::isLoaded </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Has the font been loaded successfully? </p>
<dl class="section return"><dt>Returns</dt><dd>true if the font was loaded. </dd></dl>

</div>
</div>
<a class="anchor" id="a55cc803d12857a970408f2e14b6b568c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::loadFont </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fontsize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>_bAntiAliased</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>_bFullCharacterSet</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>makeContours</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>simplifyAmt</em> = <code>0.3</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dpi</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Loads the font specified by filename, allows you to control size, aliasing, and other parameters. </p>
<p>loads a font, and allows you to set the following parameters: the filename, the size, if the font is anti-aliased, if it has a full character set, if you need it to have contours (for getStringPoints) and paramters that control the simplification amount for those contours and the dpi of the font.</p>
<p>default (without dpi), non-full char set, anti aliased, 96 dpi</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>The name of the font file to load. </td></tr>
    <tr><td class="paramname">fontsize</td><td>The size in pixels to load the font. </td></tr>
    <tr><td class="paramname">_bAntiAliased</td><td>true iff the font should be anti-aliased. </td></tr>
    <tr><td class="paramname">_bFullCharacterSet</td><td>true iff the full character set should be cached. </td></tr>
    <tr><td class="paramname">makeControus</td><td>true iff the vector contours should be cached. </td></tr>
    <tr><td class="paramname">simplifyAmt</td><td>the amount to simplify the vector contours. Larger number means more simplified. </td></tr>
    <tr><td class="paramname">dpi</td><td>the dots per inch used to specify rendering size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the font was loaded correctly. </dd></dl>

</div>
</div>
<a class="anchor" id="abcb3ec25a1d51bb2f6945742b71dda23"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::setEncoding </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="of_constants_8h.html#ad4e6cefebff2917f91e999904fa9b17f">ofTextEncoding</a>&#160;</td>
          <td class="paramname"><em>encoding</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the current font encoding. </p>
<p>Can be set to either OF_ENCODING_UTF8 or OF_ENCODING_ISO_8859_15. OF_ENCODING_ISO_8859_15 is for an 8-bit single-byte coded graphic character sets, like ASCII while OF_ENCODING_UTF8 is a variable-width encoding that can represent every character in the Unicode character set. This function is useful if you are trying to draw unicode strings.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">encoding</td><td>The encoding used by the font object, either OF_ENCODING_UTF8 or </td></tr>
    <tr><td class="paramname">OF_ENCODING_ISO_8859_15</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3fc29ab51f9fc87b321f9c70c2168aa5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::setGlobalDpi </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>newDpi</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.html#_todo000035">Todo:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a5cd0651d15f07ae1b350bf398871be62"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::setLetterSpacing </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>spacing</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the letter spacing of the font object. </p>
<p>1.0 = default spacing, less then 1.0 would be tighter spacing, greater then 1.0 would be wider spacing. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spacing</td><td>Spacing of font object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4c7fa9a7f2e681af2ceb6bb2f5b24788"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::setLineHeight </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets line height for text drawn on screen. </p>
<p>Note the line height is automatically computed based on the font size, when you load in the font.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">height</td><td>Line height for text drawn on screen. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aff2f15127afb428d59a12b583fbea178"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::setSpaceSize </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>size</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the size of the space ' ' character. </p>
<p>This number, which defaults to 1.0, scales the width of the letter 'p' for the space.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>Scales the width of the letter 'p' for the space. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5de7ff4031df5404d2a6be33ca8b62ea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::stringHeight </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the string height. </p>
<p>This is essentially the height component of the <a class="el" href="classof_true_type_font.html#abdd3e920bdd44cef5e7aa05db0907cc4" title="Returns the bounding box of a string as a rectangle. ">ofTrueTypeFont::getStringBoundingBox()</a> rectangle.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>The string to get the height of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the string height. </dd></dl>

</div>
</div>
<a class="anchor" id="aecb42f8691b704a8fc3394353c9cefd8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::stringWidth </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the string width. </p>
<p>This is essentially the width component of the <a class="el" href="classof_true_type_font.html#abdd3e920bdd44cef5e7aa05db0907cc4" title="Returns the bounding box of a string as a rectangle. ">ofTrueTypeFont::getStringBoundingBox()</a> rectangle.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>The string to get the width of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the string width. </dd></dl>

</div>
</div>
<a class="anchor" id="a1270a90ae2a39acd665f9187f5dbf6c3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofTrueTypeFont::unbind </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="a82de6327bc237de1f9520cf07bec83f3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofExitCallback </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ae0529672211eb65fb3d52d0c3555e764"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::bAntiAliased</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab174a525150961a41183ef4c0603806b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::bFullCharacterSet</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a31d43872f74737dff07d7a7af8da0b37"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::binded</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae1b94826e0a87e7a9057b2285d1d8f4d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::bLoadedOk</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aca35042934d2b5f3cfb92b1a57591e87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ofTrueTypeFont::bMakeContours</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae09bc97209804f330e79a68512e39520"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int ofTrueTypeFont::border</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0d2c3da16937f1b2be80a02c055f12b4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt;<a class="el" href="of_true_type_font_8h.html#a82ccc235db2f74dfdc922b67748791cf">ofTTFCharacter</a>&gt; ofTrueTypeFont::charOutlines</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa988e4d74fd73397e17ce6ad23b4a924"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt;<a class="el" href="of_true_type_font_8h.html#a82ccc235db2f74dfdc922b67748791cf">ofTTFCharacter</a>&gt; ofTrueTypeFont::charOutlinesNonVFlipped</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2d1b89d3dc046e97f4ee716b0e65cbf6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt;<a class="el" href="structchar_props.html">charProps</a>&gt; ofTrueTypeFont::cps</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a090438504cff905e746f58c087d06944"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int ofTrueTypeFont::dpi</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a45ccd39c69fc58ad564474c995cce89a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string ofTrueTypeFont::filename</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5a6f8535815231d1f250c481ac5dfe6f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int ofTrueTypeFont::fontSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8cf821087583ddaba20d4318ff1374c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::letterSpacing</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a013460cfe40116939f07374222cd3c17"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::lineHeight</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aac4b8c9259c44c1f8cb8f38c884a94c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int ofTrueTypeFont::nCharacters</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8f97cd252e22e135aea3f87b0b18d5c8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::simplifyAmt</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a54a51a4379f956872cf136cc8c59dd17"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float ofTrueTypeFont::spaceSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3aa0ef4fbbac6fca3cdeb5a6345cfc37"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_mesh.html">ofMesh</a> ofTrueTypeFont::stringQuads</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a456c0fc05723e715ccecd528c2bf9551"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_texture.html">ofTexture</a> ofTrueTypeFont::texAtlas</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/arturo/Desktop/openFrameworks/libs/openFrameworks/graphics/<a class="el" href="of_true_type_font_8h_source.html">ofTrueTypeFont.h</a></li>
<li>/home/arturo/Desktop/openFrameworks/libs/openFrameworks/graphics/<a class="el" href="of_true_type_font_8cpp.html">ofTrueTypeFont.cpp</a></li>
</ul>
</div><!-- contents -->

            </div>
      </div>
      <div id="footer">
        ${self.footer()}
      </div> <!-- End Footer -->
    </div> <!-- End Content -->
  </body>
</html>
<%def name="header()">
  <%include file="header.mako" args="active='documentation'" />
</%def>
