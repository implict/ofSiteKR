<%inherit file="base.mako" />
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    ${self.head()}
    <meta http-equiv="X-UA-Compatible" content="IE=9"/>
    <meta name="generator" content="Doxygen 1.8.3.1"/>
    <title>openFrameworks: Class Index</title>
    <link href="tabs.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="dynsections.js"></script>
    <link href="search/search.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="search/search.js"></script>
    <script type="text/javascript">
      $(document).ready(function() { searchBox.OnSelectItem(0); });
    </script>
    <link href="doxygen.css" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <div id="content">
      ${self.header()}
      <div id="body-wrap">
      		<div class="page-wide">
	            <div class="page-left-split">
           		    <h1 class="documentation">reference</h1> <ul class="docsadvanced"><li><a href="/documentation">basic</a></li> <li><a  class="active" href="/doxygen/annotated.html">advanced</a></li> </ul>
           		</div>
		        <div class="page-right-narrow">
			        <p>This documentation is automatically generated from the openFrameworks source code using doxygen and refers to the most recent release, version <strong>${bf.config.currentVersion}</strong>.</p>
		        </div>
       		</div>
      		<div class="page-wide">
      		    <div class="doxy-mainmenu">
<!-- Generated by Doxygen 1.8.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_84d5b34cee6369a03c8d1f3b970ed216.html">openFrameworks</a></li><li class="navelem"><a class="el" href="dir_21a7ba6abdb7e89b57a67631dad1eaf5.html">gl</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ofGLProgrammableRenderer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="of_g_l_programmable_renderer_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="of_base_types_8h.html">ofBaseTypes.h</a>&quot;</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="of_polyline_8h.html">ofPolyline.h</a>&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="of_matrix4x4_8h.html">ofMatrix4x4.h</a>&quot;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="of_shader_8h.html">ofShader.h</a>&quot;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="of_graphics_8h.html">ofGraphics.h</a>&quot;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="of_matrix_stack_8h.html">ofMatrixStack.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;stack&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">class </span>ofShapeTessellation;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">class </span><a class="code" href="classof_mesh.html">ofMesh</a>;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span><a class="code" href="classof_fbo.html">ofFbo</a>;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">class </span><a class="code" href="classof_vbo.html">ofVbo</a>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="code" href="classof_g_l_programmable_renderer.html">   16</a></span>&#160;<span class="keyword">class </span><a class="code" href="classof_g_l_programmable_renderer.html">ofGLProgrammableRenderer</a>: <span class="keyword">public</span> <a class="code" href="classof_base_g_l_renderer.html">ofBaseGLRenderer</a>{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="classof_g_l_programmable_renderer.html#a26972dca19b8e31f2478f1be1fc550c4">ofGLProgrammableRenderer</a>(<span class="keywordtype">bool</span> useShapeColor=<span class="keyword">true</span>);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="classof_g_l_programmable_renderer.html#a98fda3cf30f23d5f25a8d3966e21f2a0">~ofGLProgrammableRenderer</a>();</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ace8449c979dc1c6c2ddded37b995133d">setup</a>();</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="code" href="classof_g_l_programmable_renderer.html#abc899c74a2e39ab5631fced78151e6f6">   23</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">string</span> <a class="code" href="classof_g_l_programmable_renderer.html#abc899c74a2e39ab5631fced78151e6f6">TYPE</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="code" href="classof_g_l_programmable_renderer.html#aba82dd4c4b2b9c4b801bad017f9efa08">   24</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#aba82dd4c4b2b9c4b801bad017f9efa08">getType</a>(){ <span class="keywordflow">return</span> <a class="code" href="classof_g_l_programmable_renderer.html#abc899c74a2e39ab5631fced78151e6f6">TYPE</a>; }</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a3d7c369893dba6e8718253e359d759cc">startRender</a>();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acfa9b824107664a29d0ebe573006c12c">finishRender</a>();</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a3386b4f7569f960fa6bd6d8d9a695703">setCurrentFBO</a>(<a class="code" href="classof_fbo.html">ofFbo</a> * fbo);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ac74b69424bb51eac83da81ea030b4f1b">update</a>();</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acf25b11a3a036a662ddbfae7534d2bca">draw</a>(<a class="code" href="classof_mesh.html">ofMesh</a> &amp; vertexData, <span class="keywordtype">bool</span> useColors=<span class="keyword">true</span>, <span class="keywordtype">bool</span> useTextures=<span class="keyword">true</span>, <span class="keywordtype">bool</span> useNormals = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acf25b11a3a036a662ddbfae7534d2bca">draw</a>(<a class="code" href="classof_mesh.html">ofMesh</a> &amp; vertexData, <a class="code" href="of_g_l_utils_8h.html#a6beb1fbbaba728909c78cda1eadfe28e">ofPolyRenderMode</a> renderType, <span class="keywordtype">bool</span> useColors=<span class="keyword">true</span>, <span class="keywordtype">bool</span> useTextures = <span class="keyword">true</span>, <span class="keywordtype">bool</span> useNormals=<span class="keyword">true</span>);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acf25b11a3a036a662ddbfae7534d2bca">draw</a>(<a class="code" href="classof3d_primitive.html">of3dPrimitive</a>&amp; model, <a class="code" href="of_g_l_utils_8h.html#a6beb1fbbaba728909c78cda1eadfe28e">ofPolyRenderMode</a> renderType);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acf25b11a3a036a662ddbfae7534d2bca">draw</a>(<a class="code" href="classof_polyline.html">ofPolyline</a> &amp; poly);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acf25b11a3a036a662ddbfae7534d2bca">draw</a>(<a class="code" href="classof_path.html">ofPath</a> &amp; path);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acf25b11a3a036a662ddbfae7534d2bca">draw</a>(<a class="code" href="classof_image__.html">ofImage</a> &amp; image, <span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <span class="keywordtype">float</span> w, <span class="keywordtype">float</span> h, <span class="keywordtype">float</span> sx, <span class="keywordtype">float</span> sy, <span class="keywordtype">float</span> sw, <span class="keywordtype">float</span> sh);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acf25b11a3a036a662ddbfae7534d2bca">draw</a>(<a class="code" href="classof_image__.html" title="A class representing an image using memory and gpu based pixels. ">ofFloatImage</a> &amp; image, <span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <span class="keywordtype">float</span> w, <span class="keywordtype">float</span> h, <span class="keywordtype">float</span> sx, <span class="keywordtype">float</span> sy, <span class="keywordtype">float</span> sw, <span class="keywordtype">float</span> sh);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#acf25b11a3a036a662ddbfae7534d2bca">draw</a>(<a class="code" href="classof_image__.html" title="A class representing an image using memory and gpu based pixels. ">ofShortImage</a> &amp; image, <span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <span class="keywordtype">float</span> w, <span class="keywordtype">float</span> h, <span class="keywordtype">float</span> sx, <span class="keywordtype">float</span> sy, <span class="keywordtype">float</span> sw, <span class="keywordtype">float</span> sh);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="code" href="classof_g_l_programmable_renderer.html#a99fde856d9fd5813871d31588caa8ee8">   41</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classof_g_l_programmable_renderer.html#a99fde856d9fd5813871d31588caa8ee8">rendersPathPrimitives</a>(){</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">//--------------------------------------------</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="comment">// transformations</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a58a5d45df5ac88ca2055abf7aa5235b9">pushView</a>();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#aaf8de522277cc6265b488595f0cc847c">popView</a>();</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// setup matrices and viewport (upto you to push and pop view before and after)</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// if width or height are 0, assume windows dimensions (ofGetWidth(), ofGetHeight())</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// if nearDist or farDist are 0 assume defaults (calculated based on width / height)</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a89da006b34bf51edec21a78791690e87">viewport</a>(<a class="code" href="classof_rectangle.html" title="A class representing a 2D rectangle. ">ofRectangle</a> <a class="code" href="classof_g_l_programmable_renderer.html#a89da006b34bf51edec21a78791690e87">viewport</a>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a89da006b34bf51edec21a78791690e87">viewport</a>(<span class="keywordtype">float</span> x = 0, <span class="keywordtype">float</span> y = 0, <span class="keywordtype">float</span> <a class="code" href="of_app_e_g_l_window_8cpp.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a> = 0, <span class="keywordtype">float</span> <a class="code" href="of_app_e_g_l_window_8cpp.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a> = 0, <span class="keywordtype">bool</span> vflip=<a class="code" href="of_graphics_8cpp.html#a112ebf9b37b365ab634260fa7413d92e">ofIsVFlipped</a>());</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a58264ac387b91b742a06e8c526a9d5c9">setupScreenPerspective</a>(<span class="keywordtype">float</span> <a class="code" href="of_app_e_g_l_window_8cpp.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a> = 0, <span class="keywordtype">float</span> <a class="code" href="of_app_e_g_l_window_8cpp.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a> = 0, <span class="keywordtype">float</span> fov = 60, <span class="keywordtype">float</span> nearDist = 0, <span class="keywordtype">float</span> farDist = 0);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a79b36d455b03a6b12e95203eb312e7ec">setupScreenOrtho</a>(<span class="keywordtype">float</span> <a class="code" href="of_app_e_g_l_window_8cpp.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a> = 0, <span class="keywordtype">float</span> <a class="code" href="of_app_e_g_l_window_8cpp.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a> = 0, <span class="keywordtype">float</span> nearDist = -1, <span class="keywordtype">float</span> farDist = 1);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ae49bf62e4d0959eb40411fcf1e59ddbe">setOrientation</a>(<a class="code" href="of_constants_8h.html#a85ec4045e22bafeea5c561f9778c1f1c">ofOrientation</a> orientation, <span class="keywordtype">bool</span> vFlip);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="classof_rectangle.html" title="A class representing a 2D rectangle. ">ofRectangle</a> <a class="code" href="classof_g_l_programmable_renderer.html#afbe5a632d0c419d68b84060100f5f440">getCurrentViewport</a>();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classof_rectangle.html" title="A class representing a 2D rectangle. ">ofRectangle</a> <a class="code" href="classof_g_l_programmable_renderer.html#a01f2f45a628855c53950fc8f3d4bb998">getNativeViewport</a>();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classof_g_l_programmable_renderer.html#ae1821984c69eb3338dfeb9d0155e7bfe">getViewportWidth</a>();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classof_g_l_programmable_renderer.html#a145914ecba62d4022e4c14f3c7baa440">getViewportHeight</a>();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classof_g_l_programmable_renderer.html#a45380dff6c35caf8cc72a61fc88178e3">isVFlipped</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ab79be1ba065a16aadc3a0dcd19132b9c">setCoordHandedness</a>(<a class="code" href="of_constants_8h.html#a35cd63b4a2e112ecf30eaf0542f2388b">ofHandednessType</a> handedness);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="of_constants_8h.html#a35cd63b4a2e112ecf30eaf0542f2388b">ofHandednessType</a> <a class="code" href="classof_g_l_programmable_renderer.html#afbbffaf418e86980b68b4a44b84952a1">getCoordHandedness</a>();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">//our openGL wrappers</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a8959526c4205c9330014b1de4064410d">pushMatrix</a>();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ac31d19ef0fdc861d4aab5f80e577ce54">popMatrix</a>();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a0293e9bd63be6837e6cd670d0f8457c9">translate</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z = 0);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a0293e9bd63be6837e6cd670d0f8457c9">translate</a>(<span class="keyword">const</span> <a class="code" href="classof_vec3f.html">ofVec3f</a> &amp; p);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ad38756c681297105187c2f6a0cb114e2">scale</a>(<span class="keywordtype">float</span> xAmnt, <span class="keywordtype">float</span> yAmnt, <span class="keywordtype">float</span> zAmnt = 1);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a0f5a3546a53cd19f7ae41c6dc5c18c89">rotate</a>(<span class="keywordtype">float</span> degrees, <span class="keywordtype">float</span> vecX, <span class="keywordtype">float</span> vecY, <span class="keywordtype">float</span> vecZ);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a268d9a77bb71a50d181552dd540e97b5">rotateX</a>(<span class="keywordtype">float</span> degrees);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a46cb50c6b2334ec6c91632db85f57e3e">rotateY</a>(<span class="keywordtype">float</span> degrees);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ab0ab97453f0850bf084476d50202bf8a">rotateZ</a>(<span class="keywordtype">float</span> degrees);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a0f5a3546a53cd19f7ae41c6dc5c18c89">rotate</a>(<span class="keywordtype">float</span> degrees);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#abe28e6ae5e58c022642545d530a71cff">matrixMode</a>(<a class="code" href="of_constants_8h.html#a2d00334d4ec22117e5bfcafb5570263d">ofMatrixMode</a> mode);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a3b0884f80f0c4aec91667c1803e63279">loadIdentityMatrix</a> (<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a24e929f48598ca71b3a0a9efebb4f88c">loadMatrix</a> (<span class="keyword">const</span> <a class="code" href="classof_matrix4x4.html">ofMatrix4x4</a> &amp; m);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a24e929f48598ca71b3a0a9efebb4f88c">loadMatrix</a> (<span class="keyword">const</span> <span class="keywordtype">float</span> * m);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a912855a626c68ceb31db22f264556c10">multMatrix</a> (<span class="keyword">const</span> <a class="code" href="classof_matrix4x4.html">ofMatrix4x4</a> &amp; m);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a912855a626c68ceb31db22f264556c10">multMatrix</a> (<span class="keyword">const</span> <span class="keywordtype">float</span> * m);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classof_matrix4x4.html">ofMatrix4x4</a> <a class="code" href="classof_g_l_programmable_renderer.html#a2f8928e224059452055c72085a0fe47f" title="Queries the current OpenGL matrix state  Returns the specified matrix as held by the renderer&#39;s curre...">getCurrentMatrix</a>(<a class="code" href="of_constants_8h.html#a2d00334d4ec22117e5bfcafb5570263d">ofMatrixMode</a> matrixMode_) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// screen coordinate things / default gl values</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#adab61f9a13aee91893bd7578b71a583d">setupGraphicDefaults</a>();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a9b940285f6e7414f8218cc6fa2dc7292">setupScreen</a>();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">// drawing modes</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a0c042ea8766c81f7527a03584b85b20f">setFillMode</a>(<a class="code" href="of_constants_8h.html#ae2388165eb5c77ed1edbee0d7d68d4dc">ofFillFlag</a> fill);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="of_constants_8h.html#ae2388165eb5c77ed1edbee0d7d68d4dc">ofFillFlag</a> <a class="code" href="classof_g_l_programmable_renderer.html#a8bb9296f9ec81e72b8d138bfdd611ce3">getFillMode</a>();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a3a245f97d96f92e78543f87bd3a9e67f">setCircleResolution</a>(<span class="keywordtype">int</span> res);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a3a532554b751b8179a7b0f92f132fea2">setSphereResolution</a>(<span class="keywordtype">int</span> res);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a78f300ae32ba4868a1d9ce562960d1dd">setRectMode</a>(<a class="code" href="of_constants_8h.html#a52116548570a64993cbe3be944443fce">ofRectMode</a> mode);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="of_constants_8h.html#a52116548570a64993cbe3be944443fce">ofRectMode</a> <a class="code" href="classof_g_l_programmable_renderer.html#a9d2e509a2841e8333af641b9fcb9bbe7">getRectMode</a>();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a160b105a46a2c4add0ceee28d981efe6">setLineWidth</a>(<span class="keywordtype">float</span> lineWidth);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a85570e112fe3e51b2d4ed66fb6785fdd">setDepthTest</a>(<span class="keywordtype">bool</span> depthTest);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a3ceb25eb72a02f7f2c3c239c395b0d0e">setLineSmoothing</a>(<span class="keywordtype">bool</span> smooth);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a50813f8e079df479c0765df62fc1c6f5">setBlendMode</a>(<a class="code" href="of_constants_8h.html#a5f194ae56b1bc61651eac7184ed1ad2e">ofBlendMode</a> blendMode);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a3f3b0228f291161a05009f54b9768c20">enablePointSprites</a>();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ad01942315d1e4148452b4ec863c9eb14">disablePointSprites</a>();</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a71f4d8c5d583abc93b091bd49a2598fd">enableAntiAliasing</a>();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#afdcada0070fb89f0526eb4605b5a289d">disableAntiAliasing</a>();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="comment">// color options</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a1f7ca4cbe94d014246f6dfe807ff1bf9">setColor</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> g, <span class="keywordtype">int</span> b); <span class="comment">// 0-255</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a1f7ca4cbe94d014246f6dfe807ff1bf9">setColor</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> g, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> a); <span class="comment">// 0-255</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a1f7ca4cbe94d014246f6dfe807ff1bf9">setColor</a>(<span class="keyword">const</span> <a class="code" href="classof_color__.html">ofColor</a> &amp; color);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a1f7ca4cbe94d014246f6dfe807ff1bf9">setColor</a>(<span class="keyword">const</span> <a class="code" href="classof_color__.html">ofColor</a> &amp; color, <span class="keywordtype">int</span> _a);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a1f7ca4cbe94d014246f6dfe807ff1bf9">setColor</a>(<span class="keywordtype">int</span> gray); <span class="comment">// new set a color as grayscale with one argument</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a75fda5c23db3663198bb90ef997a6d10">setHexColor</a>( <span class="keywordtype">int</span> hexColor ); <span class="comment">// hex, like web 0xFF0033;</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// bg color</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="classof_color__.html">ofFloatColor</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#ac5f5122612a9f4a5ed9392542b2746a2">getBgColor</a>();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classof_g_l_programmable_renderer.html#a47063b0616038a8aa4153c0c94269b8c">bClearBg</a>();</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a7d1ecf5b46be4597b203f657e9ddaa17">background</a>(<span class="keyword">const</span> <a class="code" href="classof_color__.html">ofColor</a> &amp; c);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a7d1ecf5b46be4597b203f657e9ddaa17">background</a>(<span class="keywordtype">float</span> brightness);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a7d1ecf5b46be4597b203f657e9ddaa17">background</a>(<span class="keywordtype">int</span> hexColor, <span class="keywordtype">float</span> _a=255.0f);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a7d1ecf5b46be4597b203f657e9ddaa17">background</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> g, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> a=255);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a63625fb7cfd8500a8f14de6f2ba18668">setBackgroundAuto</a>(<span class="keywordtype">bool</span> bManual);       <span class="comment">// default is true</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ab2961fb8b54755dcb3cd53568314be77">clear</a>(<span class="keywordtype">float</span> r, <span class="keywordtype">float</span> g, <span class="keywordtype">float</span> b, <span class="keywordtype">float</span> a=0);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ab2961fb8b54755dcb3cd53568314be77">clear</a>(<span class="keywordtype">float</span> brightness, <span class="keywordtype">float</span> a=0);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a5bde54faac8cc1afcc672695d3a046fb">clearAlpha</a>();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">// drawing</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a500bbefad08e52a475fb92ebb99085d7">drawLine</a>(<span class="keywordtype">float</span> x1, <span class="keywordtype">float</span> y1, <span class="keywordtype">float</span> z1, <span class="keywordtype">float</span> x2, <span class="keywordtype">float</span> y2, <span class="keywordtype">float</span> z2);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a24cb2f798f7c05b6694f0c279421ff0f">drawRectangle</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <span class="keywordtype">float</span> w, <span class="keywordtype">float</span> h);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a2c33dd48745f8dbdb71fd3a0546358f4">drawTriangle</a>(<span class="keywordtype">float</span> x1, <span class="keywordtype">float</span> y1, <span class="keywordtype">float</span> z1, <span class="keywordtype">float</span> x2, <span class="keywordtype">float</span> y2, <span class="keywordtype">float</span> z2, <span class="keywordtype">float</span> x3, <span class="keywordtype">float</span> y3, <span class="keywordtype">float</span> z3);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#afbd46d94d13679c0505a4051c971c427">drawCircle</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <span class="keywordtype">float</span> radius);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a6e4c61a77b51c0f9d9fef3d2642f34f9">drawEllipse</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <span class="keywordtype">float</span> <a class="code" href="of_app_e_g_l_window_8cpp.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, <span class="keywordtype">float</span> <a class="code" href="of_app_e_g_l_window_8cpp.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#aa11a68ba61473d2dc82383d0f693b885">drawString</a>(<span class="keywordtype">string</span> text, <span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <a class="code" href="of_constants_8h.html#a14966be842b99f71080a7444cebbc0b7">ofDrawBitmapMode</a> mode);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#a0798e73bc5dd2f966cb2a311310c090c">getCurrentShader</a>();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a974111a60f1bee9d3a3501b880c8823d">enableTextureTarget</a>(<span class="keywordtype">int</span> textureTarget);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#ac8b5ac2cc2940097cc3ae4a194b9f30c">disableTextureTarget</a>(<span class="keywordtype">int</span> textureTarget);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a80021aeb96bb192aff69075a87d75028">beginCustomShader</a>(<a class="code" href="classof_shader.html">ofShader</a> &amp; shader);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a7651975dd308f637f8ff18067dc71d36">endCustomShader</a>();</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a1e3780d430337a72364c185185219d4d">setAttributes</a>(<span class="keywordtype">bool</span> vertices, <span class="keywordtype">bool</span> color, <span class="keywordtype">bool</span> tex, <span class="keywordtype">bool</span> normals);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_g_l_programmable_renderer.html#a8a3259336d458ef9c0b8a57a31f73924">setAlphaBitmapText</a>(<span class="keywordtype">bool</span> bitmapText);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#af6a9b3648668b5280743a07ac59601d4">defaultTexColor</a>();</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#a6b5e3cb1117e4f461f4a0c85dc127839">defaultTexNoColor</a>();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#afc14aa719a43012425d1e884955c796f">defaultTex2DColor</a>();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#a843790455440ca903c3d7da13262ba1d">defaultTex2DNoColor</a>();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#a205c083ee26791179779a609fa6ad963">defaultNoTexColor</a>();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#a7c116102759e6f5ec30b31ec74740824">defaultNoTexNoColor</a>();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#a0150f4f124e37186ef76018665b806df">bitmapStringShader</a>();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> &amp; <a class="code" href="classof_g_l_programmable_renderer.html#a6d10094f93c1ffa3bfc57d62b22a8f3f">defaultUniqueShader</a>();</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="classof_polyline.html">ofPolyline</a> circlePolyline;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">#ifdef TARGET_OPENGLES</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor"></span>    <a class="code" href="classof_mesh.html">ofMesh</a> circleMesh;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="classof_mesh.html">ofMesh</a> triangleMesh;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="classof_mesh.html">ofMesh</a> rectMesh;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="classof_mesh.html">ofMesh</a> lineMesh;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="classof_vbo.html">ofVbo</a> meshVbo;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor"></span>    <a class="code" href="classof_vbo_mesh.html">ofVboMesh</a> circleMesh;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="classof_vbo_mesh.html">ofVboMesh</a> triangleMesh;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="classof_vbo_mesh.html">ofVboMesh</a> rectMesh;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="classof_vbo_mesh.html">ofVboMesh</a> lineMesh;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="classof_vbo.html">ofVbo</a> meshVbo;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="classof_vbo.html">ofVbo</a> vertexDataVbo;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">void</span> uploadCurrentMatrix();</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordtype">void</span> startSmoothing();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordtype">void</span> endSmoothing();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordtype">void</span> beginDefaultShader();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordtype">void</span> uploadMatrices();</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">void</span> setDefaultUniforms();</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="classof_matrix_stack.html">ofMatrixStack</a> matrixStack;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordtype">bool</span> bBackgroundAuto;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classof_color__.html">ofFloatColor</a> bgColor;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="classof_color__.html">ofColor</a> currentColor;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="of_constants_8h.html#ae2388165eb5c77ed1edbee0d7d68d4dc">ofFillFlag</a> bFilled;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordtype">bool</span> bSmoothHinted;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="of_constants_8h.html#a52116548570a64993cbe3be944443fce">ofRectMode</a> rectMode;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="classof_shader.html">ofShader</a> * currentShader;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordtype">bool</span> verticesEnabled, colorsEnabled, texCoordsEnabled, normalsEnabled, bitmapStringEnabled;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordtype">bool</span> usingCustomShader, settingDefaultShader;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordtype">int</span> currentTextureTarget;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordtype">bool</span> wrongUseLoggedOnce;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordtype">bool</span> uniqueShader;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->

            </div>
      </div>
      <div id="footer">
        ${self.footer()}
      </div> <!-- End Footer -->
    </div> <!-- End Content -->
  </body>
</html>
<%def name="header()">
  <%include file="header.mako" args="active='documentation'" />
</%def>
