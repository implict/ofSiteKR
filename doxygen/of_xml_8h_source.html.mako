<%inherit file="base.mako" />
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    ${self.head()}
    <meta http-equiv="X-UA-Compatible" content="IE=9"/>
    <meta name="generator" content="Doxygen 1.8.3.1"/>
    <title>openFrameworks: Class Index</title>
    <link href="tabs.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="dynsections.js"></script>
    <link href="search/search.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="search/search.js"></script>
    <script type="text/javascript">
      $(document).ready(function() { searchBox.OnSelectItem(0); });
    </script>
    <link href="doxygen.css" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <div id="content">
      ${self.header()}
      <div id="body-wrap">
      		<div class="page-wide">
	            <div class="page-left-split">
           		    <h1 class="documentation">reference</h1> <ul class="docsadvanced"><li><a href="/documentation">basic</a></li> <li><a  class="active" href="/doxygen/annotated.html">advanced</a></li> </ul>
           		</div>
		        <div class="page-right-narrow">
			        <p>This documentation is automatically generated from the openFrameworks source code using doxygen and refers to the most recent release, version <strong>${bf.config.currentVersion}</strong>.</p>
		        </div>
       		</div>
      		<div class="page-wide">
      		    <div class="doxy-mainmenu">
<!-- Generated by Doxygen 1.8.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_84d5b34cee6369a03c8d1f3b970ed216.html">openFrameworks</a></li><li class="navelem"><a class="el" href="dir_526ceb304abbba6426340f0fa9170dbd.html">utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ofXml.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="of_xml_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="of_main_8h.html">ofMain.h</a>&quot;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;numeric&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/Document.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/DocumentFragment.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/Element.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/DOMParser.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/DOMException.h&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;Poco/SAX/SAXException.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;Poco/XML/XMLString.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;Poco/XML/XMLWriter.h&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/DOMParser.h&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/DOMWriter.h&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/Document.h&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/Attr.h&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/Node.h&gt;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/Text.h&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/NodeIterator.h&gt;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/NodeFilter.h&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/NamedNodeMap.h&gt;</span>  </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;Poco/DOM/ChildNodesList.h&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="code" href="classof_xml.html">   28</a></span>&#160;<span class="keyword">class </span><a class="code" href="classof_xml.html">ofXml</a>: <span class="keyword">public</span> <a class="code" href="classof_base_file_serializer.html">ofBaseFileSerializer</a> {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="classof_xml.html#adb9a12f4b8a3b7d0873924c1890b8729">ofXml</a>();</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="classof_xml.html#a9db9f6c0a59febf0997456c0e86d2acc">~ofXml</a>();</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="classof_xml.html#adb9a12f4b8a3b7d0873924c1890b8729">ofXml</a>( <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; path );</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="classof_xml.html#adb9a12f4b8a3b7d0873924c1890b8729">ofXml</a>( <span class="keyword">const</span> <a class="code" href="classof_xml.html">ofXml</a>&amp; rhs );</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">const</span> <a class="code" href="classof_xml.html">ofXml</a>&amp; <a class="code" href="classof_xml.html#a608d219ae347578f0413afb49cbcec65">operator =</a>( <span class="keyword">const</span> <a class="code" href="classof_xml.html">ofXml</a>&amp; rhs );</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classof_xml.html#a0ff6b179d0eb1299c8de93a29ec86d4b">load</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; path);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classof_xml.html#a502637820bd1828cddee960536ceda8c">save</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; path);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a3bb213985b37f809c80a0fd9994ad6bf">addChild</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path );</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="classof_xml.html#a6b760b3e7e751bd2a91d2cf0fd65a6b0">addXml</a>( <a class="code" href="classof_xml.html">ofXml</a>&amp; xml, <span class="keywordtype">bool</span> copyAll = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">string</span>          <a class="code" href="classof_xml.html#a35dbb811ea31bdad760a119dc0fb1b02">getValue</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordtype">string</span>          <a class="code" href="classof_xml.html#a35dbb811ea31bdad760a119dc0fb1b02">getValue</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; path) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="classof_xml.html#a7446944b49006aa4a743fa3ef54101b9">getIntValue</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="classof_xml.html#a7446944b49006aa4a743fa3ef54101b9">getIntValue</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; path) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordtype">float</span>           <a class="code" href="classof_xml.html#af8690ac25fd447ba10be18de55e2a088">getFloatValue</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">float</span>           <a class="code" href="classof_xml.html#af8690ac25fd447ba10be18de55e2a088">getFloatValue</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; path) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a539f1cf62aaa8dac1b614c93aecf2d3b">getBoolValue</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a539f1cf62aaa8dac1b614c93aecf2d3b">getBoolValue</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; path) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a6dcd1cd5468c84b2d0f02e9d09e9f6ce">setValue</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; value);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordtype">string</span>          <a class="code" href="classof_xml.html#a7e8c7f883bac3c202aea5b09192370e1">getAttribute</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#ae6e08bdcdf5640fcaba59d7efb8fafc5">setAttribute</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; value);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    map&lt;string, string&gt; <a class="code" href="classof_xml.html#a56885824aff18eeb18c59fb2de2ffa17">getAttributes</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="classof_xml.html#a375083dc6db07944d0162e8bb6777465">getNumChildren</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="classof_xml.html#a375083dc6db07944d0162e8bb6777465">getNumChildren</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a4757f40eb745e3effab694cd79cb069d">removeAttribute</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#ac52cf9c15b7b15696bfd3563e7b5a7ba">removeAttributes</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path); <span class="comment">// removes attributes for the passed path</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#ac52cf9c15b7b15696bfd3563e7b5a7ba">removeAttributes</a>(); <span class="comment">// removes attributes for the element ofXml is pointing to</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a156c45c1aad519c08f8eee42fa44f7a2">removeContents</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path); <span class="comment">// removes the path passed as parameter</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a156c45c1aad519c08f8eee42fa44f7a2">removeContents</a>(); <span class="comment">// removes the childs of the current element</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">bool</span>            <span class="keyword">remove</span>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path); <span class="comment">// removes both attributes and tags for the passed path</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">void</span>            <span class="keyword">remove</span>(); <span class="comment">// removes the current element and all its children,</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                              <span class="comment">// the current element will point to it&#39;s parent afterwards</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                              <span class="comment">// if the current element is the document root this will act as clear()</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a79bb14fe3455e98b2b333b9222900adb">exists</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path) <span class="keyword">const</span>; <span class="comment">// works for both attributes and tags</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="classof_xml.html#a63bd54baac57e552324f16fe6874efcd">clear</a>();  <span class="comment">// clears the full document and points the current element to the root</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">string</span>          <a class="code" href="classof_xml.html#ac7141cf9cbaea3cd81f53e04947c31ff">getName</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a74a14f705916cdbcb2899216f064103a">reset</a>();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#aed9fe52645d6de2139fe11c40f0cee17">setToChild</a>(<span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#adaad062a06397ac552640a609ee33371">setTo</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a4415f68bdd4937d13378c2d24ce186d2">setToParent</a>();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a4415f68bdd4937d13378c2d24ce186d2">setToParent</a>(<span class="keywordtype">int</span> numLevelsUp);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#aec64e3e3a100522ac2d243b9fc5a609f">setToSibling</a>();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a926c01fb08eef5d501d48d5952dfbae9">setToPrevSibling</a>();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="classof_xml.html#a581d7ebd03d8d452c863e40fd417b0b4">loadFromBuffer</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; buffer );</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">string</span>          <a class="code" href="classof_xml.html#a101ec86f233ca9e4687b76424dbc1d03">toString</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// serializer</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_xml.html#a5c364209a9751bf3070e7c92f6481028">serialize</a>(<span class="keyword">const</span> <a class="code" href="classof_abstract_parameter.html">ofAbstractParameter</a> &amp; parameter);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_xml.html#ae34d3fd14fa99e555aa0e83b42e870b6">deserialize</a>(<a class="code" href="classof_abstract_parameter.html">ofAbstractParameter</a> &amp; parameter);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">// please excuse our mess: templated get/set</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span>    </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">// a pretty useful tokenization system:</span></div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="code" href="classof_xml.html#a7aff38b95d9aeed2e7b0568c5f0a528e">   99</a></span>&#160;    <span class="keyword">static</span> vector&lt;string&gt; <a class="code" href="classof_xml.html#a7aff38b95d9aeed2e7b0568c5f0a528e">tokenize</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; str, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; delim)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        vector&lt;string&gt; tokens;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordtype">size_t</span> p0 = 0, p1 = string::npos;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">while</span>(p0 != string::npos)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            p1 = str.find_first_of(delim, p0);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">if</span>(p1 != p0)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <span class="keywordtype">string</span> token = str.substr(p0, p1 - p0);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                tokens.push_back(token);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            p0 = str.find_first_not_of(delim, p1);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">return</span> tokens;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// templated to be anything</span></div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="code" href="classof_xml.html#a12897c3da5490d679f0e9ee2d53c2d86">  118</a></span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keywordtype">bool</span> <a class="code" href="classof_xml.html#a12897c3da5490d679f0e9ee2d53c2d86">addValue</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path, T data=T(), <span class="keywordtype">bool</span> createEntirePath = <span class="keyword">false</span>)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordtype">string</span> value = <a class="code" href="of_utils_8h.html#a31a70a3bfddaf5bd90084e59188f9d59">ofToString</a>(data);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        vector&lt;string&gt; tokens;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">if</span>(path.find(<span class="charliteral">&#39;/&#39;</span>) != string::npos) {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            tokens = <a class="code" href="classof_xml.html#a7aff38b95d9aeed2e7b0568c5f0a528e">tokenize</a>(path, <span class="stringliteral">&quot;/&quot;</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="comment">// is this a tokenized tag?</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">if</span>(tokens.size() &gt; 1)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="comment">// don&#39;t &#39;push&#39; down into the new nodes</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            Poco::XML::Element* firstElement=NULL, *lastElement=NULL;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                lastElement = <a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">if</span>(!firstElement) {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                firstElement = lastElement;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; (int)tokens.size(); i++)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                Poco::XML::Element* newElement = <a class="code" href="classof_xml.html#a8aa58e9804fd66708e69126e88eea55b">getPocoDocument</a>()-&gt;createElement(tokens.at(i));</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="comment">//ofLogVerbose(&quot;ofxXml&quot;) &lt;&lt; &quot;addValue(): creating &quot; &lt;&lt; newElement-&gt;nodeName();</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="keywordflow">if</span>(lastElement) {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                    lastElement-&gt;appendChild(newElement);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                lastElement = newElement;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">if</span>(value != <span class="stringliteral">&quot;&quot;</span>)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                Poco::XML::Text *text = <a class="code" href="classof_xml.html#a8aa58e9804fd66708e69126e88eea55b">getPocoDocument</a>()-&gt;createTextNode(value);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                    lastElement-&gt;appendChild( text );</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                    </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                } <span class="keywordflow">catch</span> ( Poco::XML::DOMException &amp;e ) {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                    <a class="code" href="classof_log_error.html">ofLogError</a>(<span class="stringliteral">&quot;ofxXml&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;addValue(): couldn&#39;t set node value: &quot;</span> &lt;&lt; <a class="code" href="classof_xml.html#a3e3a9964d101875716df609727e42ac2">DOMErrorMessage</a>(e.code());</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>) {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a> = firstElement;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <a class="code" href="classof_xml.html#a8fecbdf2a260fc971c7b87cfe1ac7751">document</a>-&gt;appendChild(<a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            Poco::XML::Element *newElement = <a class="code" href="classof_xml.html#a8aa58e9804fd66708e69126e88eea55b">getPocoDocument</a>()-&gt;createElement(path);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">if</span>(value != <span class="stringliteral">&quot;&quot;</span>) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                Poco::XML::Text *text = <a class="code" href="classof_xml.html#a8aa58e9804fd66708e69126e88eea55b">getPocoDocument</a>()-&gt;createTextNode(value);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    newElement-&gt;appendChild(text);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                    text-&gt;release();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                } <span class="keywordflow">catch</span> ( Poco::XML::DOMException &amp;e ) {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    <a class="code" href="classof_log_error.html">ofLogError</a>(<span class="stringliteral">&quot;ofxXml&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;addValue(): couldn&#39;t set node value: &quot;</span> &lt;&lt; <a class="code" href="classof_xml.html#a3e3a9964d101875716df609727e42ac2">DOMErrorMessage</a>(e.code());</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>) {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                <a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>-&gt;appendChild(newElement);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a> = newElement;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment">// templated to be anything</span></div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="code" href="classof_xml.html#a524cedcda3f48146ad214c3245747ffc">  203</a></span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; T <a class="code" href="classof_xml.html#a524cedcda3f48146ad214c3245747ffc">getValue</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path, T returnVal=T())<span class="keyword"> const</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span>(path == <span class="stringliteral">&quot;&quot;</span>)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>-&gt;firstChild()-&gt;nodeType() == Poco::XML::Node::TEXT_NODE) {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="keywordflow">return</span> ofFromString&lt;T&gt;(<a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>-&gt;innerText());</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <a class="code" href="classof_log_warning.html">ofLogWarning</a>(<span class="stringliteral">&quot;ofXml&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;getValue(): path \&quot;&quot;</span> &lt;&lt; path&lt;&lt; <span class="stringliteral">&quot;\&quot; not found when getting value&quot;</span>;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                <span class="keywordflow">return</span> returnVal; <span class="comment">// hmm. this could be a problem</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            Poco::XML::Element *e = (Poco::XML::Element*) <a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>-&gt;getNodeByPath(path);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">if</span>(e) {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keywordflow">return</span> ofFromString&lt;T&gt;(e-&gt;innerText());</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">return</span> T();</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="comment">// these are advanced, you probably don&#39;t want to use them</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    Poco::XML::Element*        <a class="code" href="classof_xml.html#ac72e913e83101b22c12979817c62524c">getPocoElement</a>();</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    Poco::XML::Element*        <a class="code" href="classof_xml.html#ac72e913e83101b22c12979817c62524c">getPocoElement</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">const</span> Poco::XML::Element*  <a class="code" href="classof_xml.html#ac72e913e83101b22c12979817c62524c">getPocoElement</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">const</span> Poco::XML::Element*  <a class="code" href="classof_xml.html#ac72e913e83101b22c12979817c62524c">getPocoElement</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    Poco::XML::Document*       <a class="code" href="classof_xml.html#a8aa58e9804fd66708e69126e88eea55b">getPocoDocument</a>();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">const</span> Poco::XML::Document* <a class="code" href="classof_xml.html#a8aa58e9804fd66708e69126e88eea55b">getPocoDocument</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;       </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classof_xml.html#ae9ec2bad52525108f3ca7770db73e68f">releaseAll</a>();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="classof_xml.html#a3e3a9964d101875716df609727e42ac2">DOMErrorMessage</a>(<span class="keywordtype">short</span> msg);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="code" href="classof_xml.html#a8fecbdf2a260fc971c7b87cfe1ac7751">  240</a></span>&#160;    Poco::XML::Document *<a class="code" href="classof_xml.html#a8fecbdf2a260fc971c7b87cfe1ac7751">document</a>;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">  241</a></span>&#160;    Poco::XML::Element *<a class="code" href="classof_xml.html#a2fa0c3c16c1e24c0aebf09f1a9096807">element</a>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->

            </div>
      </div>
      <div id="footer">
        ${self.footer()}
      </div> <!-- End Footer -->
    </div> <!-- End Content -->
  </body>
</html>
<%def name="header()">
  <%include file="header.mako" args="active='documentation'" />
</%def>
