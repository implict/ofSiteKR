<%inherit file="base.mako" />
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    ${self.head()}
    <meta http-equiv="X-UA-Compatible" content="IE=9"/>
    <meta name="generator" content="Doxygen 1.8.3.1"/>
    <title>openFrameworks: Class Index</title>
    <link href="tabs.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="dynsections.js"></script>
    <link href="search/search.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="search/search.js"></script>
    <script type="text/javascript">
      $(document).ready(function() { searchBox.OnSelectItem(0); });
    </script>
    <link href="doxygen.css" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <div id="content">
      ${self.header()}
      <div id="body-wrap">
      		<div class="page-wide">
	            <div class="page-left-split">
           		    <h1 class="documentation">reference</h1> <ul class="docsadvanced"><li><a href="/documentation">basic</a></li> <li><a  class="active" href="/doxygen/annotated.html">advanced</a></li> </ul>
           		</div>
		        <div class="page-right-narrow">
			        <p>This documentation is automatically generated from the openFrameworks source code using doxygen and refers to the most recent release, version <strong>${bf.config.currentVersion}</strong>.</p>
		        </div>
       		</div>
      		<div class="page-wide">
      		    <div class="doxy-mainmenu">
<!-- Generated by Doxygen 1.8.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_84d5b34cee6369a03c8d1f3b970ed216.html">openFrameworks</a></li><li class="navelem"><a class="el" href="dir_71ce5ed87e0eac5aae2f3eaf44c16fe2.html">graphics</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">of3dGraphics.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="of_constants_8h_source.html">ofConstants.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="of_color_8h_source.html">ofColor.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="of_point_8h_source.html">ofPoint.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="of_matrix4x4_8h_source.html">ofMatrix4x4.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="of_rectangle_8h_source.html">ofRectangle.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="of_types_8h_source.html">ofTypes.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="of_base_types_8h_source.html">ofBaseTypes.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="of_g_l_renderer_8h_source.html">ofGLRenderer.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="of3d_primitives_8h_source.html">of3dPrimitives.h</a>&quot;</code><br/>
</div>
<p><a href="of3d_graphics_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a18e69981f51d49f4fd2f7d6b30e4e060"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a18e69981f51d49f4fd2f7d6b30e4e060">ofSetPlaneResolution</a> (int columns, int rows)</td></tr>
<tr class="separator:a18e69981f51d49f4fd2f7d6b30e4e060"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e8f3c7ea98b5bfcbc2be437ea762e5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_vec2f.html">ofVec2f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a7e8f3c7ea98b5bfcbc2be437ea762e5d">ofGetPlaneResolution</a> ()</td></tr>
<tr class="separator:a7e8f3c7ea98b5bfcbc2be437ea762e5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9c66ddfb49c01c4536b6cf6e6879ee8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#ab9c66ddfb49c01c4536b6cf6e6879ee8">ofDrawPlane</a> (float x, float y, float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:ab9c66ddfb49c01c4536b6cf6e6879ee8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2861a1538454a998f90ae46b50523c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#ac2861a1538454a998f90ae46b50523c4">ofDrawPlane</a> (float x, float y, float z, float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:ac2861a1538454a998f90ae46b50523c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b35b7dee8bfe8e2de27dd16eb1e2239"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a9b35b7dee8bfe8e2de27dd16eb1e2239">ofDrawPlane</a> (<a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:a9b35b7dee8bfe8e2de27dd16eb1e2239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affdd8e932584e8845249340ba8a19211"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#affdd8e932584e8845249340ba8a19211">ofDrawPlane</a> (float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:affdd8e932584e8845249340ba8a19211"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa767c995f535028f7e1eba514a977519"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#aa767c995f535028f7e1eba514a977519">ofSetSphereResolution</a> (int res)</td></tr>
<tr class="separator:aa767c995f535028f7e1eba514a977519"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab810516ee79b0bbaa3509521633ac9cf"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#ab810516ee79b0bbaa3509521633ac9cf">ofGetSphereResolution</a> ()</td></tr>
<tr class="separator:ab810516ee79b0bbaa3509521633ac9cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a050a3ed205805d7a294269558bb3b6a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a050a3ed205805d7a294269558bb3b6a6">ofDrawSphere</a> (float x, float y, float radius)</td></tr>
<tr class="separator:a050a3ed205805d7a294269558bb3b6a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a653115b244f7086eb259f2797310f669"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a653115b244f7086eb259f2797310f669">ofDrawSphere</a> (float x, float y, float z, float radius)</td></tr>
<tr class="separator:a653115b244f7086eb259f2797310f669"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85a5800a96080407025d279cac5c3f7f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a85a5800a96080407025d279cac5c3f7f">ofDrawSphere</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float radius)</td></tr>
<tr class="separator:a85a5800a96080407025d279cac5c3f7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab3b83f726eb45e12bb5cf194ffdc341"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> (float radius)</td></tr>
<tr class="separator:aab3b83f726eb45e12bb5cf194ffdc341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e7ca3777b49cb439883ff5c152cdac1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a6e7ca3777b49cb439883ff5c152cdac1">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#a13e2253ccfcdd10d6125868dae1ba08a">ofSphere</a>(float x, float y, float radius))</td></tr>
<tr class="separator:a6e7ca3777b49cb439883ff5c152cdac1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2b405fb0ba35eb73a5c6ff041752da4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#ac2b405fb0ba35eb73a5c6ff041752da4">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#a13e2253ccfcdd10d6125868dae1ba08a">ofSphere</a>(float x, float y, float z, float radius))</td></tr>
<tr class="separator:ac2b405fb0ba35eb73a5c6ff041752da4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58b3b0f62a7385246b75dd0e6115d610"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a58b3b0f62a7385246b75dd0e6115d610">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#a13e2253ccfcdd10d6125868dae1ba08a">ofSphere</a>(const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float radius))</td></tr>
<tr class="separator:a58b3b0f62a7385246b75dd0e6115d610"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ad5193ab6dbd1b34c153c249bb45488"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a6ad5193ab6dbd1b34c153c249bb45488">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#a13e2253ccfcdd10d6125868dae1ba08a">ofSphere</a>(float radius))</td></tr>
<tr class="separator:a6ad5193ab6dbd1b34c153c249bb45488"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3b735afad0cbac2cea18fb9005a81e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#acd3b735afad0cbac2cea18fb9005a81e">ofSetIcoSphereResolution</a> (int res)</td></tr>
<tr class="separator:acd3b735afad0cbac2cea18fb9005a81e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28de1439dd7e7d4575826aeddfc824c1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a28de1439dd7e7d4575826aeddfc824c1">ofGetIcoSphereResolution</a> ()</td></tr>
<tr class="separator:a28de1439dd7e7d4575826aeddfc824c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa857630c7382aea4f077fb51458f5f94"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#aa857630c7382aea4f077fb51458f5f94">ofDrawIcoSphere</a> (float x, float y, float z, float radius)</td></tr>
<tr class="separator:aa857630c7382aea4f077fb51458f5f94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a247f0b24310cea954bd6ae79b59060c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a247f0b24310cea954bd6ae79b59060c4">ofDrawIcoSphere</a> (float x, float y, float radius)</td></tr>
<tr class="separator:a247f0b24310cea954bd6ae79b59060c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a450b8ea04fd88b8b46f697d9988e0dfd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a450b8ea04fd88b8b46f697d9988e0dfd">ofDrawIcoSphere</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float radius)</td></tr>
<tr class="separator:a450b8ea04fd88b8b46f697d9988e0dfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47db947cfcc896325158c44a920c46fa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a47db947cfcc896325158c44a920c46fa">ofDrawIcoSphere</a> (float radius)</td></tr>
<tr class="separator:a47db947cfcc896325158c44a920c46fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae75b717062df3a9a777c7a4e2759afdf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#ae75b717062df3a9a777c7a4e2759afdf">ofSetCylinderResolution</a> (int radiusSegments, int heightSegments, int capSegments=2)</td></tr>
<tr class="separator:ae75b717062df3a9a777c7a4e2759afdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe4888edd182a20a80a8f71b8ee4373d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_vec3f.html">ofVec3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#abe4888edd182a20a80a8f71b8ee4373d">ofGetCylinderResolution</a> ()</td></tr>
<tr class="separator:abe4888edd182a20a80a8f71b8ee4373d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a251fd02adc7a6291c043cda8a33645e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a251fd02adc7a6291c043cda8a33645e9">ofDrawCylinder</a> (float x, float y, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:a251fd02adc7a6291c043cda8a33645e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd24986b04bff98fb312472d410f9f06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#afd24986b04bff98fb312472d410f9f06">ofDrawCylinder</a> (float x, float y, float z, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:afd24986b04bff98fb312472d410f9f06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa48d360f70c00116378b051f8c97fc8a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#aa48d360f70c00116378b051f8c97fc8a">ofDrawCylinder</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:aa48d360f70c00116378b051f8c97fc8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9701771d1d965c350975222dfdd19c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#aa9701771d1d965c350975222dfdd19c1">ofDrawCylinder</a> (float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:aa9701771d1d965c350975222dfdd19c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83f93e69a0f38939b992960454f142f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a83f93e69a0f38939b992960454f142f2">ofSetConeResolution</a> (int radiusSegments, int heightSegments, int capSegments=2)</td></tr>
<tr class="memdesc:a83f93e69a0f38939b992960454f142f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the resolution of a polygonized cone.  <a href="#a83f93e69a0f38939b992960454f142f2">More...</a><br/></td></tr>
<tr class="separator:a83f93e69a0f38939b992960454f142f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a205235a3884861580bd0b3a2ad854f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_vec3f.html">ofVec3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a3a205235a3884861580bd0b3a2ad854f">ofGetConeResolution</a> ()</td></tr>
<tr class="memdesc:a3a205235a3884861580bd0b3a2ad854f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve a data structure describing the resolution with which cones are polygonized.  <a href="#a3a205235a3884861580bd0b3a2ad854f">More...</a><br/></td></tr>
<tr class="separator:a3a205235a3884861580bd0b3a2ad854f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1937585d9ebb2acaa8d8b8c71aba8d05"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a1937585d9ebb2acaa8d8b8c71aba8d05">ofDrawCone</a> (float x, float y, float z, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:a1937585d9ebb2acaa8d8b8c71aba8d05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b78b2b440a194c4a9e40c18db50d8ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a8b78b2b440a194c4a9e40c18db50d8ea">ofDrawCone</a> (float x, float y, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:a8b78b2b440a194c4a9e40c18db50d8ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7177b377788db48a2507a82501116be2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a7177b377788db48a2507a82501116be2">ofDrawCone</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:a7177b377788db48a2507a82501116be2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37ddd96750abe3ed6f091dfed8f3c253"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> (float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>)</td></tr>
<tr class="separator:a37ddd96750abe3ed6f091dfed8f3c253"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84ed647c09fbc4ead873d3812db4e62f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a84ed647c09fbc4ead873d3812db4e62f">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#acba21832f23577ca64122faa8f45fe99">ofCone</a>(float x, float y, float z, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>))</td></tr>
<tr class="separator:a84ed647c09fbc4ead873d3812db4e62f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a2446a921f447924a589f862b6450c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a1a2446a921f447924a589f862b6450c3">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#acba21832f23577ca64122faa8f45fe99">ofCone</a>(float x, float y, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>))</td></tr>
<tr class="separator:a1a2446a921f447924a589f862b6450c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab683fdec8d0f1903b21ae55090e6f422"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#ab683fdec8d0f1903b21ae55090e6f422">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#acba21832f23577ca64122faa8f45fe99">ofCone</a>(const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>))</td></tr>
<tr class="separator:ab683fdec8d0f1903b21ae55090e6f422"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf2bf58db2949c0c7c4bcc660ce4743d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#acf2bf58db2949c0c7c4bcc660ce4743d">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#acba21832f23577ca64122faa8f45fe99">ofCone</a>(float radius, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>))</td></tr>
<tr class="separator:acf2bf58db2949c0c7c4bcc660ce4743d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a861f991666ab44bbeb2cb703a18c8d1e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a861f991666ab44bbeb2cb703a18c8d1e">ofSetBoxResolution</a> (int res)</td></tr>
<tr class="separator:a861f991666ab44bbeb2cb703a18c8d1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64f2c5649c2591e8fb035e11faf109c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a64f2c5649c2591e8fb035e11faf109c0">ofSetBoxResolution</a> (int resWidth, int resHeight, int resDepth)</td></tr>
<tr class="separator:a64f2c5649c2591e8fb035e11faf109c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83c211f6692dca8b6893bdbc5a136385"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_vec3f.html">ofVec3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a83c211f6692dca8b6893bdbc5a136385">ofGetBoxResolution</a> ()</td></tr>
<tr class="separator:a83c211f6692dca8b6893bdbc5a136385"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab07a06a80ae6068d6d29cc5e4be30eaa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#ab07a06a80ae6068d6d29cc5e4be30eaa">ofDrawBox</a> (float x, float y, float z, float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>, float depth)</td></tr>
<tr class="memdesc:ab07a06a80ae6068d6d29cc5e4be30eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws a rectangular box with the specified dimensions, starting from the specified coordinates.  <a href="#ab07a06a80ae6068d6d29cc5e4be30eaa">More...</a><br/></td></tr>
<tr class="separator:ab07a06a80ae6068d6d29cc5e4be30eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad5851ad8c1cfadd546f784aa4a1862d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#aad5851ad8c1cfadd546f784aa4a1862d">ofDrawBox</a> (float x, float y, float z, float size)</td></tr>
<tr class="memdesc:aad5851ad8c1cfadd546f784aa4a1862d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws a cube with the specified size, starting from the specified coordinates.  <a href="#aad5851ad8c1cfadd546f784aa4a1862d">More...</a><br/></td></tr>
<tr class="separator:aad5851ad8c1cfadd546f784aa4a1862d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a136ec1c966c90babda2f67100fc44432"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a136ec1c966c90babda2f67100fc44432">ofDrawBox</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>, float depth)</td></tr>
<tr class="memdesc:a136ec1c966c90babda2f67100fc44432"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws a rectangular box with the specified dimensions, starting from the specified position.  <a href="#a136ec1c966c90babda2f67100fc44432">More...</a><br/></td></tr>
<tr class="separator:a136ec1c966c90babda2f67100fc44432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c431659417c54fd967093d40d14afcf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a5c431659417c54fd967093d40d14afcf">ofDrawBox</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float size)</td></tr>
<tr class="memdesc:a5c431659417c54fd967093d40d14afcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws a cube with the specified size, starting from the specified position.  <a href="#a5c431659417c54fd967093d40d14afcf">More...</a><br/></td></tr>
<tr class="separator:a5c431659417c54fd967093d40d14afcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeef7288d39095799c3ce808a0b2c4c2e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#aeef7288d39095799c3ce808a0b2c4c2e">ofDrawBox</a> (float size)</td></tr>
<tr class="memdesc:aeef7288d39095799c3ce808a0b2c4c2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws a cube with the specified size, starting from the origin.  <a href="#aeef7288d39095799c3ce808a0b2c4c2e">More...</a><br/></td></tr>
<tr class="separator:aeef7288d39095799c3ce808a0b2c4c2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4087948540e0e7c70d2d4b03432ab9af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> (float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>, float depth)</td></tr>
<tr class="memdesc:a4087948540e0e7c70d2d4b03432ab9af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws a rectangular box with the specified dimensions, starting from the origin.  <a href="#a4087948540e0e7c70d2d4b03432ab9af">More...</a><br/></td></tr>
<tr class="separator:a4087948540e0e7c70d2d4b03432ab9af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5da66b937d0da64949619019280df0be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a5da66b937d0da64949619019280df0be">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#adb90bb93348ddb91d474e9a430186b48">ofBox</a>(float x, float y, float z, float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>, float depth))</td></tr>
<tr class="separator:a5da66b937d0da64949619019280df0be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9723affc43fa2b570a9a138678a48df4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a9723affc43fa2b570a9a138678a48df4">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#adb90bb93348ddb91d474e9a430186b48">ofBox</a>(float x, float y, float z, float size))</td></tr>
<tr class="separator:a9723affc43fa2b570a9a138678a48df4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03b1aa35b05fa612604eecdac82c7c45"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a03b1aa35b05fa612604eecdac82c7c45">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#adb90bb93348ddb91d474e9a430186b48">ofBox</a>(const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>, float depth))</td></tr>
<tr class="separator:a03b1aa35b05fa612604eecdac82c7c45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3964774695b1bcf9579c49b1c2a223ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a3964774695b1bcf9579c49b1c2a223ba">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#adb90bb93348ddb91d474e9a430186b48">ofBox</a>(const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;position, float size))</td></tr>
<tr class="separator:a3964774695b1bcf9579c49b1c2a223ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaa95288d0992b37ca7bdd4c96a383a4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#aaaa95288d0992b37ca7bdd4c96a383a4">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#adb90bb93348ddb91d474e9a430186b48">ofBox</a>(float size))</td></tr>
<tr class="separator:aaaa95288d0992b37ca7bdd4c96a383a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92a33041fa764c0b7da5edc062e03113"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="of3d_graphics_8h.html#a92a33041fa764c0b7da5edc062e03113">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;, void <a class="el" href="of3d_graphics_8cpp.html#adb90bb93348ddb91d474e9a430186b48">ofBox</a>(float <a class="el" href="of_icon_8h.html#aca34d28e3d8bcbcadb8edb4e3af24f8c">width</a>, float <a class="el" href="of_icon_8h.html#ab2e78c61905b4419fcc7b4cfc500fe85">height</a>, float depth))</td></tr>
<tr class="separator:a92a33041fa764c0b7da5edc062e03113"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a6e7ca3777b49cb439883ff5c152cdac1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofSphere</em>float x, float y, float radius&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ac2b405fb0ba35eb73a5c6ff041752da4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofSphere</em>float x, float y, float z, float radius&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a58b3b0f62a7385246b75dd0e6115d610"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofSphere</em>const ofPoint &amp;position, float radius&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a6ad5193ab6dbd1b34c153c249bb45488"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#aab3b83f726eb45e12bb5cf194ffdc341">ofDrawSphere</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofSphere</em>float radius&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a84ed647c09fbc4ead873d3812db4e62f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofCone</em>float x, float y, float z, float radius, float height&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1a2446a921f447924a589f862b6450c3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofCone</em>float x, float y, float radius, float height&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab683fdec8d0f1903b21ae55090e6f422"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofCone</em>const ofPoint &amp;position, float radius, float height&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acf2bf58db2949c0c7c4bcc660ce4743d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a37ddd96750abe3ed6f091dfed8f3c253">ofDrawCone</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofCone</em>float radius, float height&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5da66b937d0da64949619019280df0be"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofBox</em>float x, float y, float z, float width, float height, float depth&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9723affc43fa2b570a9a138678a48df4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofBox</em>float x, float y, float z, float size&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a03b1aa35b05fa612604eecdac82c7c45"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofBox</em>const ofPoint &amp;position, float width, float height, float depth&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3964774695b1bcf9579c49b1c2a223ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofBox</em>const ofPoint &amp;position, float size&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aaaa95288d0992b37ca7bdd4c96a383a4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofBox</em>float size&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a92a33041fa764c0b7da5edc062e03113"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="of3d_graphics_8h.html#a4087948540e0e7c70d2d4b03432ab9af">ofDrawBox</a> instead.&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>ofBox</em>float width, float height, float depth&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab07a06a80ae6068d6d29cc5e4be30eaa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawBox </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws a rectangular box with the specified dimensions, starting from the specified coordinates. </p>
<p>A box is a rectangular solid: an extruded rectangle. It is drawn starting from a 3D reference coordinate. It has a width (in x), a height (in y), and a depth (in z). The box is drawn with the current color, e.g. set with <a class="el" href="of_graphics_8cpp.html#abf32a6859916c39dfe5e4835c725fb6d">ofSetColor()</a>. The box is drawn filled by default; change this with <a class="el" href="of_graphics_8cpp.html#a25b1aa7e2b181dd3cb8b1086f6abbee6">ofFill()</a>;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The x-coordinate of the box's origin. </td></tr>
    <tr><td class="paramname">y</td><td>The y-coordinate of the box's origin. </td></tr>
    <tr><td class="paramname">z</td><td>The z-coordinate of the box's origin. </td></tr>
    <tr><td class="paramname">width</td><td>The width of the box. </td></tr>
    <tr><td class="paramname">height</td><td>The height of the box. </td></tr>
    <tr><td class="paramname">height</td><td>The depth of the box. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aad5851ad8c1cfadd546f784aa4a1862d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawBox </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws a cube with the specified size, starting from the specified coordinates. </p>
<p>A cube is a rectangular solid bounded by six square faces of equal size. It is also known as a regular hexahedron, a square parallelepiped, an equilateral cuboid and a right rhombohedron. It is a regular square prism in three orientations.</p>
<p>It is drawn starting from a 3D reference coordinate, with the specified size. The cube is drawn with the current color, e.g. set with <a class="el" href="of_graphics_8cpp.html#abf32a6859916c39dfe5e4835c725fb6d">ofSetColor()</a>. The cube is drawn filled by default; change this with <a class="el" href="of_graphics_8cpp.html#a25b1aa7e2b181dd3cb8b1086f6abbee6">ofFill()</a>;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The x-coordinate of the cube's origin. </td></tr>
    <tr><td class="paramname">y</td><td>The y-coordinate of the cube's origin. </td></tr>
    <tr><td class="paramname">z</td><td>The z-coordinate of the cube's origin. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the cube. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a136ec1c966c90babda2f67100fc44432"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawBox </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws a rectangular box with the specified dimensions, starting from the specified position. </p>
<p>A box is a rectangular solid: an extruded rectangle. It is drawn starting from a 3D reference coordinate. It has a width (in x), a height (in y), and a depth (in z). The box is drawn with the current color, e.g. set with <a class="el" href="of_graphics_8cpp.html#abf32a6859916c39dfe5e4835c725fb6d">ofSetColor()</a>. The box is drawn filled by default; change this with <a class="el" href="of_graphics_8cpp.html#a25b1aa7e2b181dd3cb8b1086f6abbee6">ofFill()</a>;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>an ofPoint which contains the (x,y,z) coordinates for the box's reference corner. </td></tr>
    <tr><td class="paramname">width</td><td>The width of the box. </td></tr>
    <tr><td class="paramname">height</td><td>The height of the box. </td></tr>
    <tr><td class="paramname">height</td><td>The depth of the box. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5c431659417c54fd967093d40d14afcf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawBox </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws a cube with the specified size, starting from the specified position. </p>
<p>A cube is drawn starting from a 3D reference position, with the specified size. The cube is drawn with the current color, e.g. set with <a class="el" href="of_graphics_8cpp.html#abf32a6859916c39dfe5e4835c725fb6d">ofSetColor()</a>. The cube is drawn filled by default; change this with <a class="el" href="of_graphics_8cpp.html#a25b1aa7e2b181dd3cb8b1086f6abbee6">ofFill()</a>;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>an ofPoint which contains the (x,y,z) coordinates for the cube's reference corner. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the cube. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aeef7288d39095799c3ce808a0b2c4c2e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawBox </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>size</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws a cube with the specified size, starting from the origin. </p>
<p>The cube is drawn with the current color, e.g. set with <a class="el" href="of_graphics_8cpp.html#abf32a6859916c39dfe5e4835c725fb6d">ofSetColor()</a>. The cube is drawn filled by default; change this with <a class="el" href="of_graphics_8cpp.html#a25b1aa7e2b181dd3cb8b1086f6abbee6">ofFill()</a>;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>The size of the cube. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4087948540e0e7c70d2d4b03432ab9af"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawBox </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws a rectangular box with the specified dimensions, starting from the origin. </p>
<p>A box is a rectangular solid: an extruded rectangle. It is drawn starting from the origin of the current reference frame. It has a width (in x), a height (in y), and a depth (in z). The box is drawn with the current color, e.g. set with <a class="el" href="of_graphics_8cpp.html#abf32a6859916c39dfe5e4835c725fb6d">ofSetColor()</a>. The box is drawn filled by default; change this with <a class="el" href="of_graphics_8cpp.html#a25b1aa7e2b181dd3cb8b1086f6abbee6">ofFill()</a>;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">width</td><td>The width of the box. </td></tr>
    <tr><td class="paramname">height</td><td>The height of the box. </td></tr>
    <tr><td class="paramname">height</td><td>The depth of the box. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1937585d9ebb2acaa8d8b8c71aba8d05"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawCone </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8b78b2b440a194c4a9e40c18db50d8ea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawCone </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7177b377788db48a2507a82501116be2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawCone </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a37ddd96750abe3ed6f091dfed8f3c253"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawCone </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a251fd02adc7a6291c043cda8a33645e9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawCylinder </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afd24986b04bff98fb312472d410f9f06"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawCylinder </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa48d360f70c00116378b051f8c97fc8a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawCylinder </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa9701771d1d965c350975222dfdd19c1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawCylinder </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa857630c7382aea4f077fb51458f5f94"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawIcoSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a247f0b24310cea954bd6ae79b59060c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawIcoSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a450b8ea04fd88b8b46f697d9988e0dfd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawIcoSphere </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a47db947cfcc896325158c44a920c46fa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawIcoSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab9c66ddfb49c01c4536b6cf6e6879ee8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawPlane </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ac2861a1538454a998f90ae46b50523c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawPlane </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9b35b7dee8bfe8e2de27dd16eb1e2239"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawPlane </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="affdd8e932584e8845249340ba8a19211"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawPlane </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a050a3ed205805d7a294269558bb3b6a6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a653115b244f7086eb259f2797310f669"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a85a5800a96080407025d279cac5c3f7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawSphere </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aab3b83f726eb45e12bb5cf194ffdc341"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofDrawSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a83c211f6692dca8b6893bdbc5a136385"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_vec3f.html">ofVec3f</a> ofGetBoxResolution </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3a205235a3884861580bd0b3a2ad854f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_vec3f.html">ofVec3f</a> ofGetConeResolution </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve a data structure describing the resolution with which cones are polygonized. </p>
<p>Allows you to fetch the resolution with which cones are polygonized. Returns an <a class="el" href="classof_vec3f.html">ofVec3f</a> containing the following data: Encoded as "x": radiusSegments, the number of facets (subdivisions) around the cone's circular footprint. Encoded as "y": heightSegments, the number of subdivisions from the cone's top to bottom. Encoded as "z": capSegments, the number of annular (ring-shaped) subdivisions of the cone's endcap.</p>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="classof_vec3f.html">ofVec3f</a> containing (radiusSegments, heightSegments, capSegments) for cone polygonization. </dd></dl>

</div>
</div>
<a class="anchor" id="abe4888edd182a20a80a8f71b8ee4373d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_vec3f.html">ofVec3f</a> ofGetCylinderResolution </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a28de1439dd7e7d4575826aeddfc824c1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ofGetIcoSphereResolution </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7e8f3c7ea98b5bfcbc2be437ea762e5d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_vec2f.html">ofVec2f</a> ofGetPlaneResolution </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab810516ee79b0bbaa3509521633ac9cf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ofGetSphereResolution </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a861f991666ab44bbeb2cb703a18c8d1e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofSetBoxResolution </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>res</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a64f2c5649c2591e8fb035e11faf109c0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofSetBoxResolution </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>resWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>resHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>resDepth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a83f93e69a0f38939b992960454f142f2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofSetConeResolution </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>radiusSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>heightSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>capSegments</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the resolution of a polygonized cone. </p>
<p>Allows you to set the polygonization resolution of any cones you subsequently draw with <a class="el" href="of3d_graphics_8cpp.html#a1937585d9ebb2acaa8d8b8c71aba8d05">ofDrawCone()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">radiusSegments</td><td>The number of facets (subdivisions) around the cone's circular footprint. </td></tr>
    <tr><td class="paramname">heightSegments</td><td>The number of subdivisions from the cone's top to bottom. </td></tr>
    <tr><td class="paramname">capSegments</td><td>The number of annular (ring-shaped) subdivisions of the cone's endcap. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae75b717062df3a9a777c7a4e2759afdf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofSetCylinderResolution </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>radiusSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>heightSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>capSegments</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acd3b735afad0cbac2cea18fb9005a81e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofSetIcoSphereResolution </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>res</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a18e69981f51d49f4fd2f7d6b30e4e060"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofSetPlaneResolution </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>columns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rows</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa767c995f535028f7e1eba514a977519"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofSetSphereResolution </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>res</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->

            </div>
      </div>
      <div id="footer">
        ${self.footer()}
      </div> <!-- End Footer -->
    </div> <!-- End Content -->
  </body>
</html>
<%def name="header()">
  <%include file="header.mako" args="active='documentation'" />
</%def>
